<?xml version='1.0' encoding='utf-8'?>
<!--<!DOCTYPE hibernate-configuration SYSTEM "./dtd/hibernate-configuration-3.0.dtd">
-->
	<!--OR Here we added dtd file to /resource/dtd manually. -->
	
	<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
    

<hibernate-configuration>

    <session-factory
        name="java:hibernate/SessionFactory">

        <!-- JDBC Related configuration. Change according to local setup -->
        <property name="hibernate.connection.driver.class">com.mysql.cj.jdbc.Driver</property>
        <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/jdbcdemo</property>
        <property name="hibernate.connection.username">root</property>
        <property name="hibernate.connection.password">root</property>
        
        
        <!-- HIBERNATE related configuration -->
        
        <!-- create: create table (if found, drop it and create new one)-->
        <!-- update: update existing table, create if not available -->
        <!-- create-drop: drop existing table (if any) while starting application and create new. Also drop created table while stopping application -->
        <property name="hibernate.hbm2ddl.auto">update</property>
        
        <!-- Inform ORM to generate the query as per which DBE -->
        <!-- Need to get class name from org.hibernate.dialect -->
        <property name="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</property>
        
        <!-- To display the query generated by ORM -->
        <property name="hibernate.show_sql">true</property>
        <property name="hibernate.format_sql">true</property>
        
        <!-- Mapping Information -->
        <!-- Can be given directly while creating SessionFactory as gien in HibernateUtil-->
        <!-- <mapping class="main.com.java.bean.Student" /> -->


		<!-- Configuring L2 cache for Session Factory -->
		<property name="cache.use_second_level_cache">true</property>
		<property name="net.sf.ehcache.configurationResourceName">
			main/com/java/cache/config/ehcache.xml</property>
		<property name="hibernate.cache.region.factory_class">
			org.hibernate.cache.ehcache.EhCacheRegionFactory
		</property>


		<!--Working with QueryCache -->
		<property name="hibernate.cache.use_query_cache">true</property>

    </session-factory>

</hibernate-configuration>